@model anbardari.tbl_users

@{
    ViewBag.Title = "ویرایش";
    Layout = "~/Views/Shared/_LayoutJustContent.cshtml";

    Database db = new Database();
    var anbars = new anbardari.Models.Repository.anbarClass().getAnbars();
    var semats = db.tbl_semat.Where(x => x.active == true).ToList();
}

<h4>@ViewBag.Title</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.anbarId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="@Html.NameFor(model => model.anbarId)" name="@Html.NameFor(model => model.anbarId)" class="form-control select2">
                    @foreach (var item in anbars)
                    {
                        <option @(Model.anbarId == item.Id?"selected" : "") value="@item.Id">@item.subject</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.anbarId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sematId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="@Html.NameFor(model => model.sematId)" name="@Html.NameFor(model => model.sematId)" class="form-control select2">
                    @foreach (var item in semats)
                    {
                        <option @(Model.sematId == item.Id?"selected" : "") value="@item.Id">@item.subject</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.sematId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.admin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.admin)
                    @Html.ValidationMessageFor(model => model.admin, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.anbardar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.anbardar)
                    @Html.ValidationMessageFor(model => model.anbardar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.family, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.family, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.family, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.father, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.father, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.father, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codemeli, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codemeli, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codemeli, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.active)
                    @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ذخیره" class="btn btn-success" />
            </div>
        </div>
    </div>
}

